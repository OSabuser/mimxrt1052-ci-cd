[DCD Descriptor]

// Clock Init
// Init all clocks
*(uint32_t*)0x400FC068 = 0xffffffff;
*(uint32_t*)0x400FC06C = 0xffffffff;
*(uint32_t*)0x400FC070 = 0xffffffff;
*(uint32_t*)0x400FC074 = 0xffffffff;
*(uint32_t*)0x400FC078 = 0xffffffff;
*(uint32_t*)0x400FC07C = 0xffffffff;
*(uint32_t*)0x400FC080 = 0xffffffff;

//CCM_ANALOG->PLL_SYS = 0x00002001;
*(uint32_t*)0x400D8030 = 0x00002001;
// CCM_ANALOG->PFD528 = 0x00100000; // 528M * 18 / 29 = 327MHz
*(uint32_t*)0x400D8100 = 0x001d0000;
// CCM->CBBCDR = 0x000D8340;
*(uint32_t*)0x400FC014 = 0x00098340; // SEMC_PODF=1 ( divide by 2)

// SDRAM Init
// Configure IOMUXC for SDRAM 
*(uint32_t*)0x401F8014 = 0x00000000;
*(uint32_t*)0x401F8018 = 0x00000000;
*(uint32_t*)0x401F801C = 0x00000000;
*(uint32_t*)0x401F8020 = 0x00000000;
*(uint32_t*)0x401F8024 = 0x00000000;
*(uint32_t*)0x401F8028 = 0x00000000;
*(uint32_t*)0x401F802C = 0x00000000;
*(uint32_t*)0x401F8030 = 0x00000000;
*(uint32_t*)0x401F8034 = 0x00000000;
*(uint32_t*)0x401F8038 = 0x00000000;
*(uint32_t*)0x401F803C = 0x00000000;
*(uint32_t*)0x401F8040 = 0x00000000;
*(uint32_t*)0x401F8044 = 0x00000000;
*(uint32_t*)0x401F8048 = 0x00000000;
*(uint32_t*)0x401F804C = 0x00000000;
*(uint32_t*)0x401F8050 = 0x00000000;
*(uint32_t*)0x401F8054 = 0x00000000;
*(uint32_t*)0x401F8058 = 0x00000000;
*(uint32_t*)0x401F805C = 0x00000000;
*(uint32_t*)0x401F8060 = 0x00000000;
*(uint32_t*)0x401F8064 = 0x00000000;
*(uint32_t*)0x401F8068 = 0x00000000;
*(uint32_t*)0x401F806C = 0x00000000;
*(uint32_t*)0x401F8070 = 0x00000000;
*(uint32_t*)0x401F8074 = 0x00000000;
*(uint32_t*)0x401F8078 = 0x00000000;
*(uint32_t*)0x401F807C = 0x00000000;
*(uint32_t*)0x401F8080 = 0x00000000;
*(uint32_t*)0x401F8084 = 0x00000000;
*(uint32_t*)0x401F8088 = 0x00000000;
*(uint32_t*)0x401F808C = 0x00000000;
*(uint32_t*)0x401F8090 = 0x00000000;
*(uint32_t*)0x401F8094 = 0x00000000;
*(uint32_t*)0x401F8098 = 0x00000000;
*(uint32_t*)0x401F809C = 0x00000000;
*(uint32_t*)0x401F80A0 = 0x00000000;
*(uint32_t*)0x401F80A4 = 0x00000000;
*(uint32_t*)0x401F80A8 = 0x00000000;
*(uint32_t*)0x401F80AC = 0x00000000;
*(uint32_t*)0x401F80B0 = 0x00000010; // Enable SION
*(uint32_t*)0x401F80B4 = 0x00000000;
*(uint32_t*)0x401F80B8 = 0x00000000;

// PAD ctrl
*(uint32_t*)0x401F8204 = 0x000000F1;
*(uint32_t*)0x401F8208 = 0x000000F1;
*(uint32_t*)0x401F820C = 0x000000F1;
*(uint32_t*)0x401F8210 = 0x000000F1;
*(uint32_t*)0x401F8214 = 0x000000F1;
*(uint32_t*)0x401F8218 = 0x000000F1;
*(uint32_t*)0x401F821C = 0x000000F1;
*(uint32_t*)0x401F8220 = 0x000000F1;
*(uint32_t*)0x401F8224 = 0x000000F1;
*(uint32_t*)0x401F8228 = 0x000000F1;
*(uint32_t*)0x401F822C = 0x000000F1;
*(uint32_t*)0x401F8230 = 0x000000F1;
*(uint32_t*)0x401F8234 = 0x000000F1;
*(uint32_t*)0x401F8238 = 0x000000F1;
*(uint32_t*)0x401F823C = 0x000000F1;
*(uint32_t*)0x401F8240 = 0x000000F1;
*(uint32_t*)0x401F8244 = 0x000000F1;
*(uint32_t*)0x401F8248 = 0x000000F1;
*(uint32_t*)0x401F824C = 0x000000F1;
*(uint32_t*)0x401F8250 = 0x000000F1;
*(uint32_t*)0x401F8254 = 0x000000F1;
*(uint32_t*)0x401F8258 = 0x000000F1;
*(uint32_t*)0x401F825C = 0x000000F1;
*(uint32_t*)0x401F8260 = 0x000000F1;
*(uint32_t*)0x401F8264 = 0x000000F1;
*(uint32_t*)0x401F8268 = 0x000000F1;
*(uint32_t*)0x401F826C = 0x000000F1;
*(uint32_t*)0x401F8270 = 0x000000F1;
*(uint32_t*)0x401F8274 = 0x000000F1;
*(uint32_t*)0x401F8278 = 0x000000F1;
*(uint32_t*)0x401F827C = 0x000000F1;
*(uint32_t*)0x401F8280 = 0x000000F1;
*(uint32_t*)0x401F8284 = 0x000000F1;
*(uint32_t*)0x401F8288 = 0x000000F1;
*(uint32_t*)0x401F828C = 0x000000F1;
*(uint32_t*)0x401F8290 = 0x000000F1;
*(uint32_t*)0x401F8294 = 0x000000F1;
*(uint32_t*)0x401F8298 = 0x000000F1;
*(uint32_t*)0x401F829C = 0x000000F1;
*(uint32_t*)0x401F82A0 = 0x000000F1;
*(uint32_t*)0x401F82A4 = 0x000000F1;
*(uint32_t*)0x401F82A8 = 0x000000F1;

// Config SEMC Controller Registers
*(uint32_t*)0x402F0000 &= ~0x02;
*(uint32_t*)0x402F0000 = 0x10000004;
*(uint32_t*)0x402F0008 = 0x00030524;
*(uint32_t*)0x402F000C = 0x06030524;
*(uint32_t*)0x402F0010 = 0x80000021;
*(uint32_t*)0x402F0014 = 0x90000021;
*(uint32_t*)0x402F0004 = 0x00000008;
*(uint32_t*)0x402F0040 = 0x00000B27;
*(uint32_t*)0x402F0044 = 0x00100100;
*(uint32_t*)0x402F0048 = 0x00020201;
*(uint32_t*)0x402F004C = 0x08193D0E;

*(uint32_t*)0x402F0074 = 0x652922;
*(uint32_t*)0x402F0078 = 0x10920;
*(uint32_t*)0x402F007C = 0x50210A08;

*(uint32_t*)0x402F0080 = 0x00000021;
*(uint32_t*)0x402F0084 = 0x00888888;
*(uint32_t*)0x402F0094 = 0x00000002;
*(uint32_t*)0x402F0098 = 0x00000000;

*(uint32_t*)0x402F0090 = 0x80000000;
*(uint32_t*)0x402F009C = 0xA55A000F;
// wait_until 
(*(uint32_t*)0x402F003C & 0x01) != 0;

*(uint32_t*)0x402F0090 = 0x80000000;
*(uint32_t*)0x402F009C = 0xA55A000C;
// wait_until 
(*(uint32_t*)0x402F003C & 0x01) != 0;

*(uint32_t*)0x402F0090 = 0x80000000;
*(uint32_t*)0x402F009C = 0xA55A000C;
// wait_until
(*(uint32_t*)0x402F003C & 0x01) != 0;

*(uint32_t*)0x402F00A0 = 0x00000022;
*(uint32_t*)0x402F0090 = 0x80000000;
*(uint32_t*)0x402F009C = 0xA55A000A;
// wait_until
(*(uint32_t*)0x402F003C & 0x01) != 0;

 


           
